{"version":3,"sources":["component/Login.js","component/Datajc.js","component/Infojc.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","usernameHandler","event","setState","username","target","value","passwordHandler","password","submitHandler","data","FormData","state","append","preventDefault","history","console","log","axios","post","headers","then","res","statuscode","status","push","alert","catch","err","this","className","onSubmit","htmlFor","placeholder","type","name","onChange","Component","Datajc","search","sort","Data","get","column","sortedList","newOrder","order","sortValue","v1","v2","id","toLowerCase","localeCompare","a","b","item","pathname","myitem","updateSearch","bind","onClick","filter","fullName","match","RegExp","email","map","index","key","to","clickMe","Infojc","align","location","mobile","age","joiningDate","salary","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cbcc4cc1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../css/myform.css'\r\nimport axios from 'axios'\r\n// import {domainUrl} from '../Common'\r\n// const uname='admin';\r\n// const pass='pass';\r\n\r\nclass Login extends Component {\r\nconstructor(props) {\r\n  \r\n  super(props)\r\n  \r\n  this.state = {\r\n        // uname:'admin',\r\n        // pass:'pass',      \r\n        username:'',   \r\n        password:''\r\n        \r\n  }\r\n}\r\n\r\nusernameHandler=event=>{\r\n  this.setState({\r\n    username:event.target.value,\r\n    \r\n  })\r\n}\r\npasswordHandler=event=>{\r\n  this.setState({\r\n  password:event.target.value\r\n  })\r\n}\r\n\r\nsubmitHandler=event=>{\r\n  var data = new FormData();\r\n  let {username,password}=this.state;\r\n  // var {history}=this.props;\r\n  \r\n  data.append(\"username\",username)\r\n  data.append(\"password\",password)\r\n  // var {history}=this.props;  \r\n//   var data = {\r\n//     username: \"prathamesh\",\r\n//     password: \"admin\",\r\n    \r\n// };\r\n  event.preventDefault()\r\n  var {history}=this.props;\r\n    console.log(\"----------------------\",this.state);\r\n    \r\n\t\taxios.post('http://localhost:8080/', data,{\r\n      headers: {'Content-Type':'application/json'}\r\n    }).then(function(res){\r\n      console.log(\"----------------------response\",res);\r\n      let statuscode=res.status;\r\n      console.log('status code is :',statuscode)\r\n      switch(statuscode){\r\n\r\n        case 201: \r\n          console.log(\"case 1\")\r\n          history.push('./Datajc')\r\n          alert('login successful') \r\n          break;\r\n        case 202: \r\n          console.log('case 2')\r\n          alert('login unsuccessful') \r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }).catch(function(err){\r\n      console.log('errror....',err);\r\n    })\r\n    \r\n      // submitHandler=event=>{\r\n      //   // const { username, uname, password, pass } = this.state;\r\n      //   const {history}=this.props;\r\n      //   const {username,password}=this.state;\r\n      //   if ((username==='admin') && (password==='pass')) {\r\n      //     console.log(\"Successfully Login\")\r\n      //     history.push('./Datajc')\r\n      //   } else {\r\n      //     alert(\"Invalid Credentials\")\r\n      //     console.log(\"Login Failed\")\r\n      //   }\r\n      \r\n  // const { username, uname, password, pass } = this.state;\r\n  //hard code authentication start\r\n  // const {history}=this.props;\r\n  // const {username,password}=this.state;\r\n  // if ((username==='admin') && (password==='pass')) {\r\n  //   console.log(\"Successfully Login\")\r\n  //   history.push('./Datajc')\r\n  // } else {\r\n  //   alert(\"Invalid Credentials\")\r\n  //   console.log(\"Login Failed\")\r\n  // }\r\n//hard code authentication end\r\n\r\n//   if ((uname==={username:event.target.value}) && (pass==={password:event.target.value})) {\r\n//   return (\r\n//     console.log('successful logged in')\r\n//   )\r\n// } else {\r\n//   console.log('failed')\r\n// }\r\n}\r\n  render() {\r\n    const {username, password}=this.state\r\n        return (\r\n        <div className=\"custom_wrapper\">\r\n            <div className=\"custom_form-wrapper\">\r\n              <h1>SIGN IN INTO YOUR ACCOUNT</h1>\r\n              <form onSubmit={this.submitHandler} >\r\n                <div className=\"custom_username\" >\r\n                  <label htmlFor=\"username\">User Name</label>\r\n                  <input className='custom_input'\r\n                    placeholder=\"example@email.com\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={this.usernameHandler}\r\n                  /><br></br>\r\n                  \r\n                \r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input className='custom_input'\r\n                    placeholder=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.passwordHandler}\r\n                  />\r\n                  <button type=\"submit\" >Login</button>\r\n                </div>\r\n                \r\n                </form>\r\n                \r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nclass Datajc extends Component {\r\nconstructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      search: '',\r\n    //   newSearch:'',\r\n      sort: 'ASC',\r\n      Data:[]\r\n      //   Data:[\r\n    //         {\r\n    //             id: 1,\r\n    //             fullName: 'Prathamesh Jadhav',\r\n    //             region: 'Karad',\r\n    //             email:'prathameshjc@gmail.com',\r\n    //             joiningdate: '05/08/2020',\r\n    //             post: 'Solution Analyst',\r\n    //             // project:'Employee Management Application',\r\n    //             frontend: 'Reactjs',\r\n    //             backend:'Nodejs',\r\n    //             database:'PostgreSQL'\r\n    //         },\r\n    //         {\r\n    //             id: 2,\r\n    //             fullName: 'Sahil Mulla',\r\n    //             region: 'Karad',\r\n    //             email:'sahilmullaiq@gmail.com',\r\n    //             joiningdate: '01/08/2020',\r\n    //             post: 'Solution Analyst',\r\n    //             frontend: 'Vue Js',\r\n    //             backend:'Flask',\r\n    //             database:'SQLite'\r\n    //         },\r\n    //         {\r\n    //             id: 3,\r\n    //             fullName: 'Saee Dharasurkar',\r\n    //             region: 'Karad',\r\n    //             email:'saeedharasurkar@gmail.com',\r\n    //             joiningdate: '10/08/2020',\r\n    //             post: 'Solution Analyst',\r\n    //             frontend: 'Reactjs',\r\n    //             backend:'Phoenix',\r\n    //             database:'Neo4j'\r\n    //         },\r\n    //         {\r\n    //             id: 4,\r\n    //             fullName: 'Shahrukh Attar',\r\n    //             region: 'Karad',\r\n    //             email:'shahrukhattar224@gmail.com',\r\n    //             joiningdate: '05/08/2020',\r\n    //             post: 'Solution Analyst',\r\n    //             frontend: 'Web2Py',\r\n    //             backend:'Web2Py',\r\n    //             database:'SQLite'\r\n    //         },\r\n    //         {\r\n    //             id: 5,\r\n    //             fullName: 'Sanskruti Gupta',\r\n    //             region: 'Karad',\r\n    //             email:'sanskrutis.gupta16@gmail.com',\r\n    //             joiningdate: '05/08/2020',\r\n    //             post: 'Solution Analyst',\r\n    //             frontend: 'Angular 8',\r\n    //             backend:'Django',\r\n    //             database:'PostgreySQL'\r\n    //         },\r\n    //         {\r\n    //             id: 6,\r\n    //             fullName: 'Shubham Sonawane',\r\n    //             region: 'Karad',\r\n    //             email:'sonawaneshubham22@gmail.com',\r\n    //             joiningdate: '10/08/2020',\r\n    //             post: 'Solution Analyst',\r\n    //             frontend: 'Angular 8',\r\n    //             backend:'Django',\r\n    //             database:'MandoDB'\r\n    //         },\r\n    \r\n    //      ]\r\n    }\r\n}\r\ncomponentDidMount(){\r\n    axios.get('http://localhost:8080/employees')\r\n  .then(res => {\r\n    const Data = res.data;\r\n    console.log(Data)\r\n    this.setState({ Data });\r\n  })\r\n}\r\nupdateSearch(event){\r\n    \r\n    this.setState({\r\n        search : event.target.value\r\n        \r\n    });\r\n    console.log(event.target.value);\r\n\r\n}\r\nsort(column) {\r\n    const sortedList = [...this.state.Data];\r\n    const newOrder = this.state.order === \"ASC\" ? \"DESC\" : \"ASC\";\r\n    const sortValue = (v1, v2) => {\r\n      if (column === 'id') return v1.id - v2.id;\r\n      return (v1[column] ?? '')\r\n        .toLowerCase()\r\n        .localeCompare((v2[column] ?? '').toLowerCase())\r\n    }\r\n    if (newOrder === \"ASC\") {\r\n      sortedList.sort((a, b) => sortValue(a, b));\r\n    } else {\r\n      sortedList.sort((a, b) => sortValue(b, a));\r\n    }\r\n    this.setState({ Data: sortedList, order: newOrder });\r\n  }\r\n// sortById() {\r\n//     let sortedList = [...this.state.Data];\r\n//     let newSort = this.state.sort === 'ASC' ? 'DESC' : 'ASC';\r\n//     if (newSort === 'ASC') {\r\n//       sortedList.sort((a, b) => a.id - b.id)\r\n//     } else {\r\n//       sortedList.sort((a, b) => b.id - a.id)\r\n//     }\r\n    \r\n//     this.setState({ Data: sortedList, sort: newSort });\r\n//   } \r\n// sortByName() {\r\n//     let sortedList = [...this.state.Data];\r\n//     let newSort = this.state.sort === 'ASC' ? 'DESC' : 'ASC';\r\n//     if (newSort === 'ASC') {\r\n//       sortedList.sort((a, b) => a.fullName > b.fullName)\r\n//     } else {\r\n//       sortedList.sort((a, b) => b.fullName < a.fullName)\r\n//     }\r\n    \r\n//     this.setState({ Data: sortedList, sort: newSort });\r\n//   }\r\nclickMe(item){\r\n    // myid:{item.id}\r\n    // mytitle:{item.title}\r\n    // myname:{item.name}\r\n    const {history}=this.props;\r\n    alert('clicked');\r\n    console.log(item);\r\n    // history.push('/Infojc')\r\n    history.push({\r\n        pathname: '/Infojc',\r\n        state: { myitem: item }\r\n            \r\n    })\r\n    //   <Infojc />\r\n    // history.push('/Infojc', { id: [item.id], title: [item.title], name:[item.name] })\r\n    // return(\r\n    //     <Infojc func ={this.clickMe} />\r\n    // )\r\n}\r\n\r\n\r\n    render() {\r\n        // let filtered=this.state.Data.filter((item)=>{\r\n        //     return item.name.toLowerCase().includes(this.state.search.toLowerCase())\r\n        // })\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n                <div className=\"card-header\">\r\n                        <b><h1>Employee List</h1></b>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter here to search\"  value={this.state.search} onChange={this.updateSearch.bind(this)} />\r\n                \r\n                <table className=\"table table-hover table-primary\">\r\n                \r\n                <tbody>\r\n                    <tr>\r\n                        <th onClick={() => this.sort('id')}>ID<i className=\"fas fa-sort text-right\"/></th>\r\n                        <th onClick={() => this.sort('fullName')}>Full Name<i className=\"fas fa-sort text-right\"/></th>\r\n                        <th onClick={() => this.sort('email')}>Email<i className=\"fas fa-sort text-right\"/></th>\r\n                    </tr>\r\n                    { \r\n              this.state.Data.filter((item) => {\r\n            return !(this.state.search) // if search is not set, return all items\r\n                    || item.fullName.match(RegExp(this.state.search, 'i'))\r\n                    || item.email.match(RegExp(this.state.search, 'i'))\r\n          }).map((item,index)=>(                    <tr key={item.id}>\r\n                       \r\n                        <td >{item.id}</td>\r\n                    <Router>    \r\n                        <td ><Link to={'/Infojc'} onClick={this.clickMe.bind(this,item)}>{item.fullName}</Link></td>\r\n                    </Router>\r\n                        <td>{item.email}</td>\r\n                    </tr>\r\n                ))\r\n                }\r\n                </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Datajc\r\n","import React from 'react';\r\n// import Datajc from './Datajc'\r\n\r\nconst Infojc = (props) => {\r\n      console.log(props);\r\n return(\r\n      // var xyz= {this.props.history.location.state.myitem};\r\n\r\n\r\n      //  <Datajc/>\r\n    // Using Props handleClick as callback function\r\n          <div >\r\n                {/* <p> {props.history.location.state.myitem.id} </p>\r\n                <p> {props.history.location.state.myitem.fullName} </p>\r\n                <p> {props.history.location.state.myitem.region} </p> */}\r\n                <table className=\"table\">\r\n                  <tbody align='center'>\r\n                    <tr>\r\n                     <td >ID</td>\r\n                     <td>{props.history.location.state.myitem.id}</td>\r\n                    </tr> \r\n                    \r\n                    <tr>\r\n                     <td>Full Name</td>\r\n                     <td>{props.history.location.state.myitem.fullName}</td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                     <td>Email Id</td>\r\n                     <td>{props.history.location.state.myitem.email}</td>\r\n                   </tr>\r\n                   <tr>\r\n\r\n                   <td>Mobile No.</td>\r\n                     <td>{props.history.location.state.myitem.mobile}</td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                   <td>Age</td>\r\n                     <td>{props.history.location.state.myitem.age}</td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                   <td>Joining Date </td>\r\n                     <td>{props.history.location.state.myitem.joiningDate}</td>\r\n                   </tr>\r\n\r\n                   <tr>\r\n                   <td>Salary</td>\r\n                     <td>{props.history.location.state.myitem.salary}</td>\r\n                   </tr>\r\n\r\n                  </tbody>    \r\n                </table> \r\n           </div>\r\n );\r\n}\r\nexport default Infojc;\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import Datajc from './Datajc'\r\n// class Infojc extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         // this.props.func(item)\r\n    \r\n//     //     this.state = {\r\n//     //          selectedRow:{\r\n//     //             id: \"\",\r\n//     //             title: \"\",\r\n//     //             name: \"\"\r\n//     //          }\r\n//     //     }\r\n//     //     // this.getRow = this.getRow.bind(this);\r\n//     }\r\n//     // getRow(row){\r\n//     //     this.setState({selectedRow: row});\r\n//     //   }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 {/* <p>Data from table</p> */}\r\n//                 {/* {} */}\r\n//                 {/* <p> getRow={this.getRow}</p>\r\n//                 <p> row={this.state.selectedRow}</p> */}\r\n//                     <p>Id : {this.props.item.id}</p> \r\n//                      <p>Title : {this.props.item.title}</p>\r\n//                     <p>Name : {this.props.item.name}</p>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Infojc\r\n","import React from 'react';\n// import NewLogin from './component/NewLogin';\n// import PostForm from './component/PostForm';\n// import SendData from './component/SendData';\n// import { Tablejc } from './component/Tablejc';\n// import Newdatajc from './component/Newdatajc';\n// import Sorttable from './component/ProductTable'\n// import Other from './component/Other';\n// import ReactTable from \"react-table\";\nimport {BrowserRouter as Router,Switch,  Route} from 'react-router-dom'\n// import Main from './component/Main';\n// import Details from './component/Details';\nimport Login from './component/Login'\n// import Emp from './component/Emp';\nimport Datajc from './component/Datajc';\nimport Infojc from './component/Infojc';\n// import {domainUrl} from './Common'\n// import Hrlogin from './component/Hrlogin';\n// import PersonsList from './component/PersonsList';\n// import AxiosTable from './component/AxiosTable';\n// import Employeedata from \"./component/Employeedata\";\n// import Mytable from './component/Mytable';\n// import \"react-table/react-table.css\"\n// import Swami from './component/Swami'\n// import {Cards, Card} from './component/Myindex'\n// import Pass from './component/Pass'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    {/* <Pass/> */}\n      {/* <NewLogin/> */}\n      {/* <PostForm/> */}\n      {/* <SendData/> */}\n      {/* <Login/> */}\n      {/* <AxiosTable/> */}\n      {/* <Datajc/> */}\n      {/* <Hrlogin/> */}\n      {/* <Newdatajc/> */}\n      {/* <Tablejc/> */}\n      {/* <Datajc/> */}\n      {/* <Sorttable/> */}\n      {/* <Other/> */}\n    {/* <Swami/>       */}\n      {/* <Router path='/' component={Main}/>\n      <Router path='/' component={Details}/> */}\n\n      {/* <Route path='/' component={Mytable}/>    */}\n     {/* />\n        <Route path='emplyeedata' component={Employeedata}/>  */}\n      {/* // employee management application */}\n      <Router>\n      <Switch>\n      \n      <Route exact={true} path='/' component={Login}/>\n        <Route path='/Datajc' component={Datajc}/>\n        \n        <Route exact path='/infojc' component={Infojc}/>\n\n     \n       </Switch>\n      </Router>\n    </div>\n  );\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Router>\n//         <div>\n//           <Route exact path=\"/cards\" component={Cards} />\n//           <Route path=\"/cards/:id\" component={Card} />\n//         </div>\n//       </Router>\n//     </div>\n//   );\n// }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}